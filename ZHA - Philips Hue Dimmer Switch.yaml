blueprint:
    name: ZHA - Philips Hue Dimmer Switch v1
    description: 'Control lights with a Philips Hue Dimmer Switch.


        The top "on" button will turn the lights on to the last set brightness

        Double click "on" to force brightness to full


        Dim up/down buttons will change the brightness smoothly and can be pressed

        and hold until the brightness is satisfactory.


        The bottom "off" button will turn the lights off.

        '
    domain: automation
    input:
        remote:
            name: Philips Hue Dimmer Switch
            description: RWL021
            selector:
                device:
                    integration: zha
                    manufacturer: Philips
                    entity:
                        domain: sensor
                        device_class: battery

        light:
            name: Light(s)
            description: The light(s) to control
            selector:
                target:
                    entity:
                        domain: light
    source_url: https://github.com/evorgevol/hassio/blob/main/ZHA%20-%20Philips%20Hue%20Dimmer%20Switch.yaml
mode: restart
max_exceeded: silent
variables:
    button_on: 'on'
    button_off: 'off_with_effect'
    button_step: 'step'
    button_on_double: 'on_double_press'
trigger:
    - platform: event
      event_type: zha_event
      event_data:
          device_id: !input 'remote'
action:
    - variables:
          command: '{{ trigger.event.data.command }}'
          cluster_id: '{{ trigger.event.data.cluster_id }}'
          endpoint_id: '{{ trigger.event.data.endpoint_id }}'
          params: '{{ trigger.event.data.params }}'
          step_mode: '{{ trigger.event.data.params.step_mode }}'
          step_size: '{{ trigger.event.data.params.step_size }}'
    - choose:
          - conditions:
                - '{{ command == button_on }}'
                - '{{ cluster_id == 6 }}'
                - '{{ endpoint_id == 1 }}'
            sequence:
                - service: light.turn_on
                  target: !input 'light'
                  data:
                      transition: 1
          - conditions:
                - '{{ command == button_off }}'
                - '{{ cluster_id == 6 }}'
                - '{{ endpoint_id == 1 }}'
                - '{{ trigger.event.data.args == [0, 0] }}'
            sequence:
                - service: light.turn_off
                  target: !input 'light'
                  data:
                      transition: 1
          - conditions:
                - '{{ command == ''step'' }}'
                - '{{ cluster_id == 8 }}'
                - '{{ endpoint_id == 1 }}'
                - "{{ trigger.event.data.params.step_mode == 1 }}"
                # - '{{ trigger.event.data.params.step_size == 30 }}'
            sequence:
                - service: light.turn_on
                  target: !input 'light'
                  data:
                      brightness_step_pct: -10
                      transition: 1
          - conditions:
                - '{{ command == step }}'
                - '{{ cluster_id == 8 }}'
                - '{{ endpoint_id == 1 }}'
                - '{{ trigger.event.data.args == [0, 30, 9] }}'
            sequence:
                - service: light.turn_on
                  target: !input 'light'
                  data:
                      brightness_step_pct: 10
                      transition: 1
          - conditions:
                - '{{ command == step }}'
                - '{{ cluster_id == 8 }}'
                - '{{ endpoint_id == 1 }}'
                - '{{ trigger.event.data.args == [0, 56, 9] }}'
            sequence:
                - service: light.turn_on
                  target: !input 'light'
                  data:
                      brightness_step_pct: 25
                      transition: 1
          - conditions:
                - '{{ command == step }}'
                - '{{ cluster_id == 8 }}'
                - '{{ endpoint_id == 1 }}'
                - '{{ trigger.event.data.args == [1, 56, 9] }}'
            sequence:
                - service: light.turn_on
                  target: !input 'light'
                  data:
                      brightness_step_pct: -25
                      transition: 1
